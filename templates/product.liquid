{% comment %}
  Product detail template with image gallery and product options
{% endcomment %}

{%- comment -%} Handle case where product doesn't exist {%- endcomment -%}
{%- unless product -%}
  {%- assign product = collections.all.products.first -%}
{%- endunless -%}

<div class="product-page">
  <div class="container">
    <!-- Breadcrumb -->
    <div class="product-breadcrumb">
      <a href="/">Home</a>
      <span class="breadcrumb-separator">/</span>
      <a href="/collections/all">All Products</a>
      <span class="breadcrumb-separator">/</span>
      <span class="breadcrumb-current">{{ product.title | default: 'Sample Product' }}</span>
    </div>

    <div class="product-layout">
      <!-- Product Images -->
      <div class="product-images">
        <div class="product-main-image">
          {% if product.featured_image %}
            <img src="{{ product.featured_image | img_url: '800x800' }}" alt="{{ product.title }}" class="product-main-img" id="main-image">
          {% else %}
            <img src="https://images.unsplash.com/photo-1515372039744-b8f02a3ae446?w=800&h=800&fit=crop&crop=center" alt="Sample Product" class="product-main-img" id="main-image">
          {% endif %}
          {% if product.compare_at_price > product.price %}
            <div class="product-badge sale">Sale</div>
          {% endif %}
          {% if product.tags contains 'new' %}
            <div class="product-badge new">New</div>
          {% endif %}
        </div>
        
        <div class="product-thumbnails">
          {% if product.images.size > 0 %}
            {% for image in product.images limit: 5 %}
              <button class="product-thumbnail {% if forloop.first %}active{% endif %}" 
                      data-image="{{ image | img_url: '800x800' }}"
                      data-zoom="{{ image | img_url: '1200x1200' }}">
                <img src="{{ image | img_url: '100x100' }}" alt="{{ product.title }}" class="thumbnail-img">
              </button>
            {% endfor %}
          {% else %}
            <!-- Sample thumbnails -->
            <button class="product-thumbnail active" 
                    data-image="https://images.unsplash.com/photo-1515372039744-b8f02a3ae446?w=800&h=800&fit=crop&crop=center"
                    data-zoom="https://images.unsplash.com/photo-1515372039744-b8f02a3ae446?w=1200&h=1200&fit=crop&crop=center">
              <img src="https://images.unsplash.com/photo-1515372039744-b8f02a3ae446?w=100&h=100&fit=crop&crop=center" alt="Sample Product" class="thumbnail-img">
            </button>
            <button class="product-thumbnail" 
                    data-image="https://images.unsplash.com/photo-1594633312681-425c7b97ccd1?w=800&h=800&fit=crop&crop=center"
                    data-zoom="https://images.unsplash.com/photo-1594633312681-425c7b97ccd1?w=1200&h=1200&fit=crop&crop=center">
              <img src="https://images.unsplash.com/photo-1594633312681-425c7b97ccd1?w=100&h=100&fit=crop&crop=center" alt="Sample Product" class="thumbnail-img">
            </button>
            <button class="product-thumbnail" 
                    data-image="https://images.unsplash.com/photo-1506629905607-1a0b0b0b0b0b?w=800&h=800&fit=crop&crop=center"
                    data-zoom="https://images.unsplash.com/photo-1506629905607-1a0b0b0b0b0b?w=1200&h=1200&fit=crop&crop=center">
              <img src="https://images.unsplash.com/photo-1506629905607-1a0b0b0b0b0b?w=100&h=100&fit=crop&crop=center" alt="Sample Product" class="thumbnail-img">
            </button>
            <button class="product-thumbnail" 
                    data-image="https://images.unsplash.com/photo-1551028719-00167b16eac5?w=800&h=800&fit=crop&crop=center"
                    data-zoom="https://images.unsplash.com/photo-1551028719-00167b16eac5?w=1200&h=1200&fit=crop&crop=center">
              <img src="https://images.unsplash.com/photo-1551028719-00167b16eac5?w=100&h=100&fit=crop&crop=center" alt="Sample Product" class="thumbnail-img">
            </button>
            <button class="product-thumbnail" 
                    data-image="https://images.unsplash.com/photo-1549298916-b41d501d3772?w=800&h=800&fit=crop&crop=center"
                    data-zoom="https://images.unsplash.com/photo-1549298916-b41d501d3772?w=1200&h=1200&fit=crop&crop=center">
              <img src="https://images.unsplash.com/photo-1549298916-b41d501d3772?w=100&h=100&fit=crop&crop=center" alt="Sample Product" class="thumbnail-img">
            </button>
          {% endif %}
        </div>
      </div>

      <!-- Product Info -->
      <div class="product-info">
        <div class="product-header">
          <h1 class="product-title">{{ product.title }}</h1>
          <div class="product-rating">
            <div class="product-stars">
              <span>★★★★★</span>
            </div>
            <span class="product-reviews">({{ product.metafields.reviews.count | default: 0 }} reviews)</span>
          </div>
        </div>

        <div class="product-price">
          <span class="product-price-current">${{ product.price | money_without_currency }}</span>
          {% if product.compare_at_price > product.price %}
            <span class="product-price-original">${{ product.compare_at_price | money_without_currency }}</span>
            <span class="product-discount">
              Save {{ product.compare_at_price | minus: product.price | times: 100 | divided_by: product.compare_at_price }}%
            </span>
          {% endif %}
        </div>

        <div class="product-description">
          <p>{{ product.description | truncate: 200 }}</p>
        </div>

        <!-- Product Options -->
        <form class="product-form" id="product-form">
          {% for option in product.options_with_values %}
            <div class="product-option">
              <h4 class="option-label">{{ option.name }}</h4>
              <div class="option-values">
                {% for value in option.values %}
                  <button type="button" 
                          class="option-value {% if forloop.first %}selected{% endif %}"
                          data-option="{{ option.name }}"
                          data-value="{{ value }}">
                    {% if option.name == 'Color' %}
                      <span class="color-swatch" style="background: {{ value | downcase }};" title="{{ value }}"></span>
                      <span class="value-text">{{ value }}</span>
                    {% else %}
                      {{ value }}
                    {% endif %}
                  </button>
                {% endfor %}
              </div>
            </div>
          {% endfor %}

          <!-- Quantity -->
          <div class="product-quantity">
            <h4 class="quantity-label">Quantity</h4>
            <div class="quantity-controls">
              <button type="button" class="quantity-btn" data-action="decrease">-</button>
              <input type="number" name="quantity" value="1" min="1" max="10" class="quantity-input">
              <button type="button" class="quantity-btn" data-action="increase">+</button>
            </div>
          </div>

          <!-- Add to Cart -->
          <div class="product-actions">
            <button type="submit" class="btn btn-primary btn-lg add-to-cart-btn" 
                    {% unless product.available %}disabled{% endunless %}>
              {% if product.available %}
                Add to Cart 
              {% else %}
                Sold Out
              {% endif %}
            </button>
            
            <button type="button" class="btn btn-secondary btn-lg wishlist-btn" data-product-id="{{ product.id }}">
              <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
              </svg>
              Add to Wishlist
            </button>
          </div>
        </form>

        <!-- Product Details -->
        <div class="product-details">
          <div class="product-tabs">
            <button class="tab-btn active" data-tab="description">Description</button>
            <button class="tab-btn" data-tab="details">Details</button>
            <button class="tab-btn" data-tab="reviews">Reviews</button>
            <button class="tab-btn" data-tab="shipping">Shipping</button>
          </div>
          
          <div class="tab-content">
            <div class="tab-panel active" id="description">
              <div class="product-description-full">
                {{ product.description }}
              </div>
            </div>
            
            <div class="tab-panel" id="details">
              <div class="product-specs">
                <h4>Product Details</h4>
                <ul>
                  <li><strong>Material:</strong> {{ product.metafields.custom.material | default: 'Cotton' }}</li>
                  <li><strong>Care Instructions:</strong> {{ product.metafields.custom.care_instructions | default: 'Machine wash cold' }}</li>
                  <li><strong>Origin:</strong> {{ product.metafields.custom.origin | default: 'Imported' }}</li>
                  <li><strong>SKU:</strong> {{ product.selected_or_first_available_variant.sku }}</li>
                </ul>
              </div>
            </div>
            
            <div class="tab-panel" id="reviews">
              <div class="product-reviews-section">
                <h4>Customer Reviews</h4>
                <div class="reviews-summary">
                  <div class="reviews-rating">
                    <span class="rating-number">4.8</span>
                    <div class="rating-stars">★★★★★</div>
                    <span class="rating-count">({{ product.metafields.reviews.count | default: 0 }} reviews)</span>
                  </div>
                </div>
                <div class="reviews-list">
                  <!-- Reviews would be populated here -->
                  <p>No reviews yet. Be the first to review this product!</p>
                </div>
              </div>
            </div>
            
            <div class="tab-panel" id="shipping">
              <div class="shipping-info">
                <h4>Shipping Information</h4>
                <ul>
                  <li>Free shipping on orders over $50</li>
                  <li>Standard shipping: 3-5 business days</li>
                  <li>Express shipping: 1-2 business days</li>
                  <li>International shipping available</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

   <!-- ...existing code... -->

  <!-- Related Products -->
  {% assign related_products = collections[product.collections.first.handle].products | where: "id", product.id, false %}
  {% if related_products.size > 0 %}
    <div class="related-products">
      <h3 class="related-title">You Might Also Like</h3>
      <div class="related-grid">
        {% for related_product in related_products limit: 4 %}
          <div class="related-product">
            <div class="related-product-image">
              <img src="{{ related_product.featured_image | img_url: '300x300' }}" alt="{{ related_product.title }}" class="related-img">
              <a href="/products/{{ related_product.handle }}" class="related-link">Quick View</a>
            </div>
            <div class="related-product-info">
              <h4 class="related-product-title">{{ related_product.title }}</h4>
              <div class="related-product-price">${{ related_product.price | money_without_currency }}</div>
            </div>
          </div>
        {% endfor %}
      </div>
    </div>
  {% endif %}
  </div>
</div>

<style>
/* Product Page Styles */
.product-page {
  padding: 4rem 0;
}

.product-breadcrumb {
  margin-bottom: 3rem;
  font-size: 1.4rem;
  color: var(--gray-500);
}

.breadcrumb-separator {
  margin: 0 1rem;
}

.breadcrumb-current {
  color: var(--gray-700);
  font-weight: 500;
}

.product-layout {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 6rem;
  margin-bottom: 8rem;
}

/* Product Images */
.product-images {
  position: relative;
  top: 2rem;
}

.product-main-image {
  position: relative;
  aspect-ratio: 1;
  margin-bottom: 2rem;
  border-radius: 1.2rem;
  overflow: hidden;
  box-shadow: 0 8px 30px var(--shadow-strong);
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
}

.product-main-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.product-main-image:hover .product-main-img {
  transform: scale(1.05);
}

.product-badge {
  position: absolute;
  top: 2rem;
  left: 2rem;
  padding: 0.8rem 1.6rem;
  border-radius: 2rem;
  font-size: 1.2rem;
  font-weight: 600;
  color: var(--white);
  z-index: 2;
}

.product-badge.sale {
  background: var(--primary-light);
}

.product-badge.new {
  background: var(--success);
}

.product-thumbnails {
  display: flex;
  gap: 1rem;
  overflow-x: auto;
  padding-bottom: 1rem;
}

.product-thumbnail {
  flex-shrink: 0;
  width: 8rem;
  height: 8rem;
  border: 2px solid transparent;
  border-radius: 0.8rem;
  overflow: hidden;
  cursor: pointer;
  transition: all 0.3s ease;
  background: none;
}

.product-thumbnail:hover,
.product-thumbnail.active {
  border-color: var(--primary-light);
}

.thumbnail-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* Product Info */
.product-info {
  padding-left: 2rem;
}

.product-header {
  margin-bottom: 2rem;
}

.product-title {
  font-size: 3.6rem;
  margin-bottom: 1rem;
  color: var(--gray-700);
  line-height: 1.2;
}

.product-rating {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.product-stars {
  color: var(--warning);
  font-size: 1.6rem;
}

.product-reviews {
  color: var(--gray-500);
  font-size: 1.4rem;
}

.product-price {
  margin-bottom: 2rem;
}

.product-price-current {
  font-size: 3.2rem;
  font-weight: 700;
  color: var(--primary-light);
}

.product-price-original {
  font-size: 2.4rem;
  color: var(--gray-400);
  text-decoration: line-through;
  margin-left: 1rem;
}

.product-discount {
  display: inline-block;
  background: var(--primary-light);
  color: var(--white);
  padding: 0.4rem 0.8rem;
  border-radius: 1rem;
  font-size: 1.2rem;
  font-weight: 600;
  margin-left: 1rem;
}

.product-description {
  margin-bottom: 3rem;
  color: var(--gray-500);
  line-height: 1.6;
}

/* Product Form */
.product-form {
  margin-bottom: 4rem;
}

.product-option {
  margin-bottom: 2rem;
}

.option-label {
  font-size: 1.6rem;
  margin-bottom: 1rem;
  color: var(--gray-700);
  font-weight: 600;
}

.option-values {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.option-value {
  padding: 1rem 1.6rem;
  border: 2px solid var(--gray-200);
  border-radius: 0.8rem;
  background: var(--white);
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 1.4rem;
  display: flex;
  align-items: center;
  gap: 0.8rem;
}

.option-value:hover {
  border-color: var(--primary-light);
  color: var(--primary-light);
}

.option-value.selected {
  background: var(--primary-light);
  border-color: var(--primary-light);
  color: var(--white);
}

.color-swatch {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  border: 2px solid var(--gray-200);
}

.product-quantity {
  margin-bottom: 3rem;
}

.quantity-label {
  font-size: 1.6rem;
  margin-bottom: 1rem;
  color: var(--gray-700);
  font-weight: 600;
}

.quantity-controls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.quantity-btn {
  width: 4rem;
  height: 4rem;
  border: 2px solid var(--gray-200);
  background: var(--white);
  border-radius: 0.8rem;
  cursor: pointer;
  font-size: 1.8rem;
  font-weight: 600;
  transition: all 0.3s ease;
}

.quantity-btn:hover {
  border-color: var(--primary-light);
  color: var(--primary-light);
}

.quantity-input {
  width: 8rem;
  height: 4rem;
  border: 2px solid var(--gray-200);
  border-radius: 0.8rem;
  text-align: center;
  font-size: 1.6rem;
  font-weight: 600;
}

.product-actions {
  display: flex;
  gap: 2rem;
  margin-bottom: 4rem;
}

.product-actions .btn {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}

/* Product Details */
.product-details {
  border-top: 1px solid var(--gray-200);
  padding-top: 3rem;
}

.product-tabs {
  display: flex;
  gap: 2rem;
  margin-bottom: 3rem;
  border-bottom: 1px solid var(--gray-200);
}

.tab-btn {
  padding: 1.2rem 2rem;
  background: none;
  border: none;
  border-bottom: 3px solid transparent;
  cursor: pointer;
  font-size: 1.4rem;
  font-weight: 500;
  color: var(--gray-500);
  transition: all 0.3s ease;
}

.tab-btn:hover,
.tab-btn.active {
  color: var(--primary-light);
  border-bottom-color: var(--primary-light);
}

.tab-panel {
  display: none;
}

.tab-panel.active {
  display: block;
}

.product-specs ul {
  list-style: none;
  padding: 0;
}

.product-specs li {
  padding: 1rem 0;
  border-bottom: 1px solid var(--gray-150);
  display: flex;
  justify-content: space-between;
}

.reviews-summary {
  margin-bottom: 3rem;
}

.reviews-rating {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.rating-number {
  font-size: 3.2rem;
  font-weight: 700;
  color: var(--gray-700);
}

.rating-stars {
  color: var(--warning);
  font-size: 2rem;
}

.rating-count {
  color: var(--gray-500);
  font-size: 1.4rem;
}

.shipping-info ul {
  list-style: none;
  padding: 0;
}

.shipping-info li {
  padding: 1rem 0;
  border-bottom: 1px solid var(--gray-150);
  display: flex;
  align-items: center;
  gap: 1rem;
}

.shipping-info li::before {
  content: '✓';
  color: var(--success);
  font-weight: 600;
}

/* Related Products */
.related-products {
  margin-top: 8rem;
}

.related-title {
  font-size: 2.8rem;
  margin-bottom: 3rem;
  text-align: center;
  color: var(--gray-700);
}

.related-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  gap: 3rem;
}

.related-product {
  background: var(--white);
  border-radius: 1.2rem;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  transition: transform 0.3s ease;
}

.related-product:hover {
  transform: translateY(-4px);
}

.related-product-image {
  position: relative;
  aspect-ratio: 1;
  overflow: hidden;
}

.related-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.related-product:hover .related-img {
  transform: scale(1.05);
}

.related-link {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(255, 107, 107, 0.9);
  color: var(--white);
  padding: 1rem 2rem;
  border-radius: 2rem;
  text-decoration: none;
  font-weight: 600;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.related-product:hover .related-link {
  opacity: 1;
}

.related-product-info {
  padding: 2rem;
}

.related-product-title {
  font-size: 1.6rem;
  margin-bottom: 1rem;
  color: var(--gray-700);
}

.related-product-price {
  font-size: 1.8rem;
  font-weight: 600;
  color: var(--primary-light);
}

/* Responsive Design */
@media (max-width: 1024px) {
  .product-layout {
    grid-template-columns: 1fr;
    gap: 3rem;
  }
  .product-main-image {
    max-width: 320px;
  }
  .product-info {
    padding-left: 0;
  }
}

@media (max-width: 768px) {
  .product-page {
    padding: 2rem 0;
  }
  .product-layout {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  .product-main-image {
    max-width: 260px;
  }
  .product-title {
    font-size: 2.2rem;
  }
  .product-actions {
    flex-direction: column;
    gap: 1rem;
  }
  .product-tabs {
    flex-wrap: wrap;
    gap: 1rem;
  }
  .related-grid {
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
    gap: 1rem;
  }
}

@media (max-width: 480px) {
  .product-title {
    font-size: 1.6rem;
  }
  .product-price-current {
    font-size: 1.4rem;
  }
  .product-main-image {
    max-width: 180px;
  }
  .option-values {
    flex-direction: column;
  }
  .option-value {
    justify-content: flex-start;
  }
  .related-grid {
    grid-template-columns: 1fr;
  }
  .product-page {
    padding: 1rem 0.2rem;
  }
}

</style>

<script>
// Product Page Functionality
document.addEventListener('DOMContentLoaded', function() {
  // Image gallery
  const thumbnails = document.querySelectorAll('.product-thumbnail');
  const mainImage = document.getElementById('main-image');
  
  thumbnails.forEach(thumbnail => {
    thumbnail.addEventListener('click', function() {
      const imageSrc = this.dataset.image;
      mainImage.src = imageSrc;
      
      thumbnails.forEach(t => t.classList.remove('active'));
      this.classList.add('active');
    });
  });
  
  // Product options
  const optionValues = document.querySelectorAll('.option-value');
  
  optionValues.forEach(option => {
    option.addEventListener('click', function() {
      const optionGroup = this.dataset.option;
      const optionGroupElements = document.querySelectorAll(`[data-option="${optionGroup}"]`);
      
      optionGroupElements.forEach(el => el.classList.remove('selected'));
      this.classList.add('selected');
    });
  });
  
  // Quantity controls
  const quantityInput = document.querySelector('.quantity-input');
  const quantityButtons = document.querySelectorAll('.quantity-btn');
  
  quantityButtons.forEach(button => {
    button.addEventListener('click', function() {
      const action = this.dataset.action;
      const currentValue = parseInt(quantityInput.value);
      
      if (action === 'increase' && currentValue < 10) {
        quantityInput.value = currentValue + 1;
      } else if (action === 'decrease' && currentValue > 1) {
        quantityInput.value = currentValue - 1;
      }
    });
  });
  
  // Tabs
  const tabButtons = document.querySelectorAll('.tab-btn');
  const tabPanels = document.querySelectorAll('.tab-panel');
  
  tabButtons.forEach(button => {
    button.addEventListener('click', function() {
      const targetTab = this.dataset.tab;
      
      tabButtons.forEach(btn => btn.classList.remove('active'));
      tabPanels.forEach(panel => panel.classList.remove('active'));
      
      this.classList.add('active');
      document.getElementById(targetTab).classList.add('active');
    });
  });
  
  // Add to cart
  const addToCartBtn = document.querySelector('.add-to-cart-btn');
  const productForm = document.getElementById('product-form');
  
  productForm.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const selectedOptions = {};
    const optionValues = document.querySelectorAll('.option-value.selected');
    
    optionValues.forEach(option => {
      selectedOptions[option.dataset.option] = option.dataset.value;
    });
    
    const quantity = quantityInput.value;
    
    // Find the variant that matches selected options
    // This would need to be implemented based on your variant structure
    console.log('Selected options:', selectedOptions);
    console.log('Quantity:', quantity);
    
    // Add to cart logic would go here
    addToCartBtn.textContent = 'Adding...';
    addToCartBtn.disabled = true;
    
    setTimeout(() => {
      addToCartBtn.textContent = 'Added to Cart';
      setTimeout(() => {
        addToCartBtn.textContent = 'Add to Cart';
        addToCartBtn.disabled = false;
      }, 2000);
    }, 1000);
  });
  
  // Wishlist
  const wishlistBtn = document.querySelector('.wishlist-btn');
  
  wishlistBtn.addEventListener('click', function() {
    const productId = this.dataset.productId;
    
    // Toggle wishlist
    this.classList.toggle('active');
    
    if (this.classList.contains('active')) {
      this.innerHTML = `
        <svg class="icon" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="2">
          <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
        </svg>
        Added to Wishlist
      `;
    } else {
      this.innerHTML = `
        <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
        </svg>
        Add to Wishlist
      `;
    }
  });
});
</script>
